<?xml version="1.0" encoding="utf-8"?>
<UserControl
    x:Class="ShelterVault.Views.CredentialsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ShelterVault.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:model="using:ShelterVault.Models" 
    xmlns:viewmodels="using:ShelterVault.ViewModels" 
    xmlns:behaviors="using:Microsoft.Xaml.Interactions.Core" 
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:tools="using:ShelterVault.Tools"
    mc:Ignorable="d">
    <UserControl.DataContext>
        <viewmodels:CredentialsViewModel x:Name="ViewModel"/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <tools:BoolToPasswordVisibilityConverter x:Key="BoolToPasswordVisibility"/>
        <tools:CredentialsViewModelStateToVisibilityConverter x:Key="StateToVisibilityConverter"/>
        <tools:CredentialsViewModelStateToBoolConverter x:Key="StateToBoolConverter"/>
        <tools:ShowHideToVisibilityConverter x:Key="ShowHideToVisibility"/>
        <DataTemplate x:Key="CredentialListViewTemplate" x:DataType="model:Credential">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <FontIcon x:Name="Icon"
                    Width ="32"
                    Height="32"
                    Margin="6"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Glyph="&#xE72E;"/>
                <TextBlock Grid.Column="1" VerticalAlignment="Center"
                    Text="{x:Bind Title, Mode=TwoWay}"
                    Style="{ThemeResource BaseTextBlockStyle}"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid Margin="10">
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel>
                <StackPanel Orientation="Horizontal" Height="100" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed">
                    <FontIcon Glyph="&#xE705;" Foreground="#00FF05" FontSize="50"/>
                    <TextBlock VerticalAlignment="Center" Margin="10 0 0 0" Style="{StaticResource TitleTextBlockStyle}" Foreground="#00FF05">ShelterVault</TextBlock>
                </StackPanel>
                <Button HorizontalAlignment="Stretch" IsEnabled="{Binding State, Mode=OneWay, Converter={StaticResource StateToBoolConverter}, ConverterParameter=0}" Height="50" Background="{StaticResource ButtonPointerOverBackgroundThemeBrush}" Margin="0 10 0 0" Command="{Binding NewCredentialCommand}">
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xE710;" Foreground="{ThemeResource AccentAAFillColorDefaultBrush}"/>
                        <TextBlock Margin="5 0 0 0">New credential</TextBlock>
                    </StackPanel>
                </Button>
            </StackPanel>
            <ListView x:Name="CredentialList" Grid.Row="1" IsEnabled="{Binding State, Mode=OneWay, Converter={StaticResource StateToBoolConverter}, ConverterParameter=0}" SelectionMode="Single" ItemTemplate="{StaticResource CredentialListViewTemplate}" ItemsSource="{Binding Credentials, Mode=TwoWay}" SelectedItem="{Binding SelectedCredential, Mode=TwoWay}">
                <interactivity:Interaction.Behaviors>
                    <behaviors:EventTriggerBehavior EventName="SelectionChanged">
                        <behaviors:InvokeCommandAction Command="{Binding SelectedCredentialChangedCommand}" />
                    </behaviors:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </ListView>
            <StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Top" Margin="15 0 0 0">
                <StackPanel Orientation="Horizontal" Margin="0 10 0 10">
                    <Button Margin="0 0 10 0" Command="{Binding SetClipboardCommand}" Visibility="{Binding State, Mode=OneWay, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter=0}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE8C8;" Foreground="{ThemeResource AccentAAFillColorTertiaryBrush}"/>
                            <TextBlock Margin="5 0 0 0">Copy</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Margin="0 0 10 0" Width="90" Command="{Binding ShowPasswordCommand}" Visibility="{Binding ShowPassword, Mode=OneWay, Converter={StaticResource ShowHideToVisibility}, ConverterParameter=false}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xF78D;" Foreground="Green"/>
                            <TextBlock Margin="5 0 0 0">Show</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Margin="0 0 10 0" Width="90" Command="{Binding ShowPasswordCommand}" Visibility="{Binding ShowPassword, Mode=OneWay, Converter={StaticResource ShowHideToVisibility}, ConverterParameter=true}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xED1A;" Foreground="Green"/>
                            <TextBlock Margin="5 0 0 0">Hide</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button  Margin="0 0 10 0" Command="{Binding SaveCredentialChangesCommand}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE74E;" Foreground="{ThemeResource AccentAAFillColorTertiaryBrush}"/>
                            <TextBlock Margin="5 0 0 0">Save</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Margin="0 0 10 0" Command="{Binding DeleteCredentialCommand}" Visibility="{Binding State, Mode=OneWay, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter=0}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE74D;" Foreground="Red"/>
                            <TextBlock Margin="5 0 0 0">Delete</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Margin="0 0 10 0" Command="{Binding CancelCredentialCommand}" Visibility="{Binding State, Mode=OneWay, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter=1}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE711;" Foreground="#FF9229"/>
                            <TextBlock Margin="5 0 0 0">Cancel</TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>
                <TextBlock Margin="0 0 0 5">Title:</TextBlock>
                <TextBox x:Name="SelectedTitle" Margin="0 0 0 10" Text="{Binding SelectedCredential.Title, Mode=TwoWay}"/>
                <TextBlock Margin="0 0 0 5">Username:</TextBlock>
                <TextBox x:Name="SelectedUsername" Margin="0 0 0 10" Text="{Binding SelectedCredential.Username, Mode=TwoWay}"/>
                <TextBlock Margin="0 0 0 5">Password:</TextBlock>
                <PasswordBox x:Name="SelectedPassword" PasswordRevealMode="{Binding ShowPassword, Mode=OneWay, Converter={StaticResource BoolToPasswordVisibility}}" Margin="0 0 0 10" tools:PasswordBoxHelper.SecurePassword="{Binding SelectedCredential.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" tools:PasswordBoxHelper.IsMonitoring="True" IsPasswordRevealButtonEnabled="True"/>
                <TextBlock Margin="0 0 0 5">Confirm password:</TextBlock>
                <PasswordBox x:Name="SelectedPasswordConfirmation" PasswordRevealMode="{Binding ShowPassword, Mode=OneWay, Converter={StaticResource BoolToPasswordVisibility}}" Margin="0 0 0 10" tools:PasswordBoxHelper.SecurePassword="{Binding SelectedCredential.PasswordConfirmation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" tools:PasswordBoxHelper.IsMonitoring="True" IsPasswordRevealButtonEnabled="True"/>
                <TextBlock Margin="0 0 0 5" Visibility="{Binding State, Mode=OneWay, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter=0}">Encrypted password:</TextBlock>
                <TextBox x:Name="SelectedEncriptedPassword" Visibility="{Binding State, Mode=OneWay, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter=0}" Margin="0 0 0 10" Text="{Binding SelectedCredential.EncryptedPassword, Mode=TwoWay}" IsReadOnly="True" IsEnabled="False"/>
                <TextBlock Margin="0 0 0 5">URL:</TextBlock>
                <TextBox x:Name="SelectedUrl" Margin="0 0 0 10" Text="{Binding SelectedCredential.Url, Mode=TwoWay}"/>
                <TextBlock Margin="0 0 0 5">Notes:</TextBlock>
                <TextBox x:Name="SelectedNotes" Height="150" Margin="0 0 0 10" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding SelectedCredential.Notes, Mode=TwoWay}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
